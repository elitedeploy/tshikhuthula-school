---
import { generateSlug } from '../utils/slug';

export interface Props {
  facility: {
    id: number;
    name: string;
    description: string;
    category: string;
    capacity: string;
    features: string[];
    image: string;
    is_featured: boolean;
    year_established: number;
    usage: string;
  };
  showDetails?: boolean;
}

const { facility, showDetails = false } = Astro.props;
---

<div class="facility-card h-100">
  <div class="card h-100 shadow-sm">
    <div class="position-relative overflow-hidden">
      <img 
        src={facility.image} 
        alt={facility.name} 
        class="card-img-top" 
        style="height: 200px; object-fit: cover;"
      />
      <div class="position-absolute top-0 end-0 m-2">
        <span class={`badge ${facility.is_featured ? 'bg-warning' : 'bg-secondary'}`}>
          {facility.is_featured ? 'Featured' : facility.category}
        </span>
      </div>
      {facility.is_featured && (
        <div class="position-absolute top-0 start-0 m-2">
          <span class="badge bg-primary">
            <i class="fas fa-star me-1"></i>Featured
          </span>
        </div>
      )}
    </div>
    
    <div class="card-body d-flex flex-column">
      <div class="d-flex justify-content-between align-items-start mb-2">
        <h5 class="card-title mb-0">{facility.name}</h5>
        <small class="text-muted">{facility.year_established}</small>
      </div>
      
      <div class="mb-2">
        <span class="badge bg-light text-dark me-2">
          <i class="fas fa-users me-1"></i>{facility.capacity}
        </span>
        <span class="badge bg-light text-dark">
          <i class="fas fa-tag me-1"></i>{facility.category}
        </span>
      </div>
      
      <p class="card-text text-muted small mb-3">
        {facility.description}
      </p>
      
      {showDetails && (
        <div class="mb-3">
          <h6 class="text-primary mb-2">
            <i class="fas fa-list me-1"></i>Key Features:
          </h6>
          <ul class="list-unstyled small">
            {facility.features.slice(0, 3).map(feature => (
              <li class="mb-1">
                <i class="fas fa-check text-success me-2"></i>{feature}
              </li>
            ))}
            {facility.features.length > 3 && (
              <li class="text-muted">
                <i class="fas fa-plus me-2"></i>+{facility.features.length - 3} more features
              </li>
            )}
          </ul>
        </div>
      )}
      
      <div class="mt-auto">
        <div class="d-flex justify-content-between align-items-center">
          <small class="text-muted" style="max-width: 60%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
            <i class="fas fa-clock me-1"></i>Used for: {facility.usage.split(',')[0].length > 15 ? facility.usage.split(',')[0].substring(0, 15) + '...' : facility.usage.split(',')[0]}
          </small>
          <a href={`/facilities/${generateSlug(facility.name)}`} class="btn btn-primary btn-sm text-nowrap">
            Learn More
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.facility-card {
  transition: transform 0.3s ease;
}

.facility-card:hover {
  transform: translateY(-5px);
}

.card {
  border: none;
  border-radius: 15px;
}

.card-img-top {
  border-radius: 15px 15px 0 0;
}

.badge {
  font-size: 0.75rem;
}
</style>